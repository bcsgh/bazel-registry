diff --git a/BUILD b/BUILD
new file mode 100644
index 00000000..ffffffff
--- /dev/null
+++ b/BUILD
@@ -0,0 +1,55 @@
+load("@bazel_skylib//rules:write_file.bzl", "write_file")
+
+ver = "0.31.1"
+maj, min, patch = ver.split(".")
+
+write_file(
+    name = "gen_config_h",
+    out = "include/aws/crt/Config.h",
+    content = [
+        "#define AWS_CRT_CPP_VERSION \"v%s\"" % ver,
+        "#define AWS_CRT_CPP_VERSION_MAJOR %s" % maj,
+        "#define AWS_CRT_CPP_VERSION_MINOR %s" % min,
+        "#define AWS_CRT_CPP_VERSION_PATCH %s" % patch,
+    ],
+)
+
+cc_library(
+    name = "aws-crt-cpp",
+    srcs = glob([
+        "source/**/*.cpp",
+        "source/auth/*.cpp",
+        "source/crypto/*.cpp",
+        "source/endpoints/*.cpp",
+        "source/http/*.cpp",
+        "source/io/*.cpp",
+        "source/iot/*.cpp",
+        "source/mqtt/*.cpp",
+    ]),
+    hdrs = [
+        ":gen_config_h",
+    ] + glob([
+        "include/aws/crt/*.h",
+        "include/aws/crt/auth/*.h",
+        "include/aws/crt/cbor/*.h",
+        "include/aws/crt/checksum/*.h",
+        "include/aws/crt/crypto/*.h",
+        "include/aws/crt/endpoints/*.h",
+        "include/aws/crt/http/*.h",
+        "include/aws/crt/io/*.h",
+        "include/aws/crt/mqtt/*.h",
+        "include/aws/crt/mqtt/private/*.h",
+        "include/aws/iot/*.h",
+    ]),
+    includes = ["include"],
+    deps = [
+        "@aws-c-auth",
+        #TODO? "@:aws-c-cal",
+        "@aws-c-common",
+        "@aws-c-event-stream",
+        "@aws-c-io",
+        "@aws-c-mqtt",
+        "@aws-c-s3",
+    ],
+    visibility = ["//visibility:public"],
+)
