diff --git a/BUILD b/BUILD
new file mode 100644
index 00000000..ffffffff
--- /dev/null
+++ b/BUILD
@@ -0,0 +1,121 @@
+load("@bazel_skylib//rules:common_settings.bzl", "string_flag")
+load("@bazel_skylib//rules:write_file.bzl", "write_file")
+
+############################################################################
+write_file(
+    name = "all-aws-sdk-config-hdr",
+    out = "aws/core/SDKConfig.h",
+    content = select({
+        "@platforms//os:windows": [
+            # Pulled from https://github.com/tensorflow/io
+            "#define WIN32_LEAN_AND_MEAN",
+            "#if defined(_MSC_VER)",
+            "#  include <Windows.h>",
+            "#  undef IGNORE",
+            "#endif",
+        ],
+        "//conditions:default": []
+    }) + [""],
+)
+
+string_flag(
+    name = "aws_memory",
+    build_setting_default = "std",
+    values = ["aws", "std"],
+)
+
+[config_setting(
+    name = "aws_memory_%s" % (v),
+    flag_values = {":aws_memory": v},
+) for v in ["aws", "std"]]
+
+cc_library(
+    name = "aws-sdk-cpp-config",
+    hdrs = ["aws/core/SDKConfig.h"],
+    defines = select({
+        ":aws_memory_aws": ["USE_AWS_MEMORY_MANAGEMENT"],
+        ":aws_memory_std": [],
+    }),
+    includes = ["."],
+)
+
+############################################################################
+string_flag(
+    name = "aws_http",
+    build_setting_default = "crt",
+    values = ["crt", "curl"],
+)
+
+[config_setting(
+    name = "aws_http_%s" % (v),
+    flag_values = {":aws_http": v},
+) for v in ["crt", "curl"]]
+
+HTTP_CRT_CPP =     ["source/http/crt/*.cpp"]
+HTTP_CURL_CPP =    ["source/http/curl/*.cpp"]
+HTTP_WINDOWS_CPP = ["source/http/windows/*.cpp"]
+HTTP_EXCLUDE = HTTP_CRT_CPP + HTTP_CURL_CPP + HTTP_WINDOWS_CPP
+
+############################################################################
+PLATFORM_ANDROID_CPP = ["source/platform/android/*.cpp"]
+PLATFORM_LINUX_CPP =   ["source/platform/linux-shared/*.cpp"]
+PLATFORM_WINDOWS_CPP = ["source/platform/windows/*.cpp"]
+PLATFORM_EXCLUDE = PLATFORM_ANDROID_CPP + PLATFORM_LINUX_CPP + PLATFORM_WINDOWS_CPP
+
+############################################################################
+NET_LINUX_CPP =   ["source/net/linux-shared/*.cpp"]
+NET_WINDOWS_CPP = ["source/net/windows/*.cpp"]
+NET_NONE_CPP =    ["source/net/*.cpp"]
+NET_EXCLUDE = NET_LINUX_CPP + NET_WINDOWS_CPP + NET_NONE_CPP
+
+############################################################################
+cc_library(
+    name = "aws-sdk-core",
+    srcs = glob(
+        ["source/**/*.cpp"],
+        exclude = HTTP_EXCLUDE + NET_EXCLUDE + PLATFORM_EXCLUDE,
+    ) + select({
+        ":aws_http_crt": glob(HTTP_CRT_CPP),
+        ":aws_http_curl": glob(HTTP_CURL_CPP),
+        "@platforms//os:windows": glob(HTTP_WINDOWS_CPP),
+    }) + select({
+        "@platforms//os:linux": glob(NET_LINUX_CPP),
+        "@platforms//os:windows": glob(NET_WINDOWS_CPP),
+        "//conditions:default": glob(NET_NONE_CPP),
+    })+ select({
+        "@platforms//os:android": glob(PLATFORM_ANDROID_CPP),
+        "@platforms//os:linux": glob(PLATFORM_LINUX_CPP),
+        "@platforms//os:windows": glob(PLATFORM_WINDOWS_CPP),
+    }),
+    hdrs = glob([
+        "include/aws/core/**/*.h",
+        "include/smithy/**/*.h",
+    ]),
+    includes = ["include"],
+    defines = [
+        "ENABLE_OPENSSL_ENCRYPTION",
+    ] + select({
+        ":aws_http_crt": ["AWS_SDK_USE_CRT_HTTP"],
+        ":aws_http_curl": ["ENABLE_CURL_CLIENT"],
+        "@platforms//os:windows": [
+            "ENABLE_WINDOWS_CLIENT",
+            "PLATFORM_WINDOWS",
+        ],
+    }),
+    deps = [
+        "@aws-c-common",
+        "@aws-checksums",
+        "@aws-crt-cpp",
+        "@boringssl//:ssl",
+        "@opentelemetry-cpp//api",
+        "@opentelemetry-cpp//exporters/ostream:ostream_metric_exporter",
+        "@opentelemetry-cpp//exporters/ostream:ostream_span_exporter",
+        "@opentelemetry-cpp//sdk:headers",
+        ":aws-sdk-cpp-config",
+    ] + select({
+        ":aws_http_crt": [], # duplicated above "@aws-crt-cpp"
+        ":aws_http_curl": ["@curl"],
+        "@platforms//os:windows": [],  # NOTE: not tested
+    }),
+    visibility = ["//visibility:public"],
+)
